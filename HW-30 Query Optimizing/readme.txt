На самом деле, тут даже план запроса читать не надо, можно просто посмотреть на запрос и понять, что может быть не так.
Вынесла тяжелую часть в tempdb, далее две CTE. Что касается времемнной таблицы. Тут используется несколько иннер джойнов, агрегаты, да ещё и условие с отрицанием. Джойны никак не убрать, если нужны данные из разных таблиц (ну или я не знаю способ). Агрегаты никуда не деть. Что касается отрицания, насколько помню, оно работает как distinct, то есть сначала выбирается всё, а потом из этого "всего" делается отрицание. Зная хорошо аналитику, я бы выбрала только то, что надо заранее, если это возможно (в этой базе у меня с аналитикой проблемы). Далее идут две CTE. Переменным дала generic имена, без углубления в детали, по-хорошему, называть надо нормально. 
Далее обнаружилось, что вот это условие where p.sum > 250000 излишнее, так как суммы всегда больше этого значения. Также вот это условие излишнее DATEDIFF(dd, inv.InvoiceDate, OrderDate) = 0. Таким образом, получилось избавиться от двух джойнов.
Мой запрос и запрос в задании по выводу данных абсолютно идентичны. 
Интересный момент, если временную таблицу удалять через айдишник, то есть IF OBJECT_ID('tempdb.dbo.#temptable', 'U') IS NOT NULL, то будет медленнее. Ну тут понятна причина, он лезет в таблицу айдишников, чтобы найти его и проверить.
А вот тут интересно уже. 
Первоначальный запрос получил такую статистику 
CPU time = 1844 ms,  elapsed time = 1656 ms.
В следующий запуск
CPU time = 1532 ms,  elapsed time = 1371 ms.
Удалила кеш через DBCC FREEPROCCACHE, стало ещё меньше. Вот тут непонятно, по логике должно быть наоборот.
Что касается результирующего запроса, там 
CPU time = 78 ms,  elapsed time = 251 ms без очистки кеша, с чистым кешем чуть больше. Я смотрела последнюю строку, результирующий вывод, уже выборка из временной таблицы. Основное время будет занимать проверка временной таблицы на существование, а также само создание. Тут много иннер джойнов и агрегаты. Как вариант, вынести в три временных таблицы все агрегаты SUM(det.UnitPrice) as UnitPriceSum, SUM(det.Quantity) as Quantity,
COUNT(ord.OrderID) as OrderID. Но надо знать аналитику, тут надо под условие подобрать, чтобы все три таблицы выводили значения как в условии, тогда их можно сджойнить по доп полю между собой и всё.
Если подскажете условия, то создать еще три временных таблицы, и основная временная будет занимать меньше времени.


 